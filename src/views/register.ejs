<!DOCTYPE html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register - Forum</title>

    <!-- Leaflet CSS - Load first -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin=""/>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">

    <style>
        /* Leaflet map container */
        #map {
            height: 400px !important;
            width: 100% !important;
            z-index: 1;
        }

        /* Ensure Leaflet controls are visible */
        .leaflet-container {
            height: 100% !important;
            width: 100% !important;
            z-index: 1;
        }

        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .register-container {
            background: white;
            border-radius: 16px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            padding: 2rem;
            width: 100%;
            max-width: 500px;
            margin: 1rem;
        }

        .register-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .register-header h1 {
            color: #2c3e50;
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .register-header p {
            color: #6c757d;
            font-size: 1rem;
            margin-bottom: 0;
        }

        .form-floating {
            margin-bottom: 1.5rem;
        }

        .form-control {
            border: 2px solid #e1e8ed;
            border-radius: 8px;
            padding: 1rem 0.75rem;
            font-size: 1rem;
        }

        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-select {
            border: 2px solid #e1e8ed;
            border-radius: 8px;
            padding: 1rem 0.75rem;
            font-size: 1rem;
        }

        .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .password-strength {
            margin-top: 0.5rem;
            font-size: 0.875rem;
            padding: 0.5rem;
            border-radius: 6px;
        }

        .password-strength.weak {
            background: #fee;
            color: #c33;
            border: 1px solid #fcc;
        }

        .password-strength.medium {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }

        .password-strength.strong {
            background: #efe;
            color: #3c3;
            border: 1px solid #cfc;
        }

        .btn-register {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            padding: 1rem;
            font-size: 1.1rem;
            font-weight: 600;
            border-radius: 8px;
            width: 100%;
            transition: all 0.2s ease;
        }

        .btn-register:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
        }

        .form-section {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border-left: 4px solid #667eea;
        }

        .form-section h6 {
            color: #495057;
            font-weight: 600;
            margin-bottom: 1rem;
            font-size: 1rem;
        }

        .login-link {
            text-align: center;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid #e1e8ed;
        }

        .login-link a {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.2s;
        }

        .login-link a:hover {
            color: #5a6fd8;
        }

        .error-message {
            background: #fee;
            color: #c33;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1.5rem;
            border: 1px solid #fcc;
            font-size: 0.9rem;
        }

        .success-message {
            background: #efe;
            color: #3c3;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1.5rem;
            border: 1px solid #cfc;
            font-size: 0.9rem;
        }

        .field-icon {
            color: #6c757d;
            margin-right: 0.5rem;
        }

        .required-field::after {
            content: ' *';
            color: #dc3545;
        }
    </style>
</head>
<body>
    <div class="register-container">
        <div class="register-header">
            <h1><i class="bi bi-person-plus-fill"></i> Join Forum</h1>
            <p>Create your account to start participating</p>
        </div>

        <% if (typeof error !== 'undefined') { %>
        <div class="error-message">
            <i class="bi bi-exclamation-triangle"></i> <%= error %>
        </div>
        <% } %>

        <% if (typeof success !== 'undefined') { %>
        <div class="success-message">
            <i class="bi bi-check-circle"></i> <%= success %>
        </div>
        <% } %>

        <form action="/register" method="POST" id="registerForm">
            <!-- Basic Information Section -->
            <div class="form-section">
                <h6><i class="bi bi-person-circle field-icon"></i>Basic Information</h6>

                <div class="form-floating mb-3">
                    <input type="text"
                           class="form-control"
                           id="username"
                           name="username"
                           placeholder="Choose a username"
                           required>
                    <label for="username" class="required-field">
                        <i class="bi bi-person field-icon"></i>Username
                    </label>
                </div>

                <div class="form-floating mb-3">
                    <input type="email"
                           class="form-control"
                           id="email"
                           name="email"
                           placeholder="Enter your email"
                           required>
                    <label for="email" class="required-field">
                        <i class="bi bi-envelope field-icon"></i>Email Address
                    </label>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="password"
                                   class="form-control"
                                   id="password"
                                   name="password"
                                   placeholder="Create a password"
                                   required>
                            <label for="password" class="required-field">
                                <i class="bi bi-key field-icon"></i>Password
                            </label>
                        </div>
                        <div class="password-strength" id="password-strength">Password strength: </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="password"
                                   class="form-control"
                                   id="confirmPassword"
                                   name="confirmPassword"
                                   placeholder="Confirm password"
                                   required>
                            <label for="confirmPassword" class="required-field">
                                <i class="bi bi-key field-icon"></i>Confirm Password
                            </label>
                        </div>
                        <div class="password-match" id="password-match"></div>
                    </div>
                </div>
            </div>

            <!-- Professional Information Section -->
            <div class="form-section">
                <h6><i class="bi bi-briefcase field-icon"></i>Professional Information</h6>

                <div class="form-floating mb-3">
                    <select class="form-select"
                            id="position"
                            name="position"
                            required>
                        <option value="">Select your position</option>
                        <option value="Manager">Manager</option>
                        <option value="Senior Developer">Senior Developer</option>
                        <option value="Developer">Developer</option>
                        <option value="Designer">Designer</option>
                        <option value="Analyst">Analyst</option>
                        <option value="Intern">Intern</option>
                        <option value="Other">Other</option>
                    </select>
                    <label for="position" class="required-field">
                        <i class="bi bi-briefcase field-icon"></i>Position
                    </label>
                </div>

                <div class="form-floating mb-3">
                    <select class="form-select"
                            id="permissionLevel"
                            name="permissionLevel"
                            required>
                        <option value="Member">Member (Default)</option>
                        <option value="Moderator">Moderator</option>
                        <option value="Admin">Admin</option>
                    </select>
                    <label for="permissionLevel" class="required-field">
                        <i class="bi bi-shield-check field-icon"></i>Permission Level
                    </label>
                </div>
            </div>

            <!-- Contact Information Section -->
            <div class="form-section">
                <h6><i class="bi bi-geo-alt field-icon"></i>Contact Information</h6>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" id="latitude" name="latitude" placeholder="위도" readonly>
                            <label for="latitude">
                                <i class="bi bi-geo field-icon"></i>위도 (Latitude)
                            </label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" id="longitude" name="longitude" placeholder="경도" readonly>
                            <label for="longitude">
                                <i class="bi bi-geo field-icon"></i>경도 (Longitude)
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Address Search -->
                <div class="form-floating mb-3">
                    <input type="text" class="form-control" id="addressSearch" placeholder="주소를 입력하고 검색하세요">
                    <label for="addressSearch">
                        <i class="bi bi-search field-icon"></i>주소 검색
                    </label>
                </div>
                <button type="button" class="btn btn-outline-primary btn-sm mb-3" id="searchAddressBtn">
                    <i class="bi bi-geo-alt"></i> 주소로 지도 이동
                </button>
            </div>

            <!-- Map Section -->
            <div class="form-section">
                <h6><i class="bi bi-map field-icon"></i>위치 설정</h6>
                <p class="text-muted small mb-3">
                    지도를 움직여 정확한 위치를 선택하세요. 또는 주소를 입력하고 "주소로 지도 이동" 버튼을 클릭하세요.
                </p>

                <!-- Map Container -->
                <div id="map" style="width: 100%; height: 400px; border-radius: 8px; border: 2px solid #e9ecef; margin-bottom: 15px; background-color: #f8f9fa;"></div>

                <div class="alert alert-info small">
                    <i class="bi bi-info-circle"></i>
                    <strong>지도 사용법:</strong> 지도를 드래그하여 원하는 위치로 이동하면 자동으로 위도/경도가 입력됩니다.
                    마커는 항상 지도 중앙에 위치합니다.
                </div>
            </div>

            <button type="submit" class="btn btn-register">
                <i class="bi bi-person-plus"></i> Create Account
            </button>
        </form>

        <div class="login-link">
            <p>Already have an account? <a href="/login">Sign in instead</a></p>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin=""></script>

    <script>
        // Password strength indicator
        document.getElementById('password').addEventListener('input', function() {
            const password = this.value;
            const strengthIndicator = document.getElementById('password-strength');
            let strength = '';
            let className = '';

            if (password.length === 0) {
                strength = 'Password strength: ';
                className = '';
            } else if (password.length < 6) {
                strength = 'Password strength: Weak';
                className = 'weak';
            } else if (password.length < 10) {
                strength = 'Password strength: Medium';
                className = 'medium';
            } else {
                strength = 'Password strength: Strong';
                className = 'strong';
            }

            strengthIndicator.textContent = strength;
            strengthIndicator.className = `password-strength ${className}`;
        });

        // Password confirmation check
        document.getElementById('confirmPassword').addEventListener('input', function() {
            const password = document.getElementById('password').value;
            const confirmPassword = this.value;
            const matchIndicator = document.getElementById('password-match');

            if (confirmPassword.length === 0) {
                matchIndicator.textContent = '';
                matchIndicator.className = 'password-match';
            } else if (password === confirmPassword) {
                matchIndicator.innerHTML = '<i class="bi bi-check-circle"></i> Passwords match';
                matchIndicator.style.color = '#28a745';
            } else {
                matchIndicator.innerHTML = '<i class="bi bi-exclamation-triangle"></i> Passwords do not match';
                matchIndicator.style.color = '#dc3545';
            }
        });

        // Form validation
        document.getElementById('registerForm').addEventListener('submit', function(e) {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            if (password !== confirmPassword) {
                e.preventDefault();
                alert('Passwords do not match!');
                document.getElementById('confirmPassword').focus();
                return false;
            }

            if (password.length < 6) {
                e.preventDefault();
                alert('Password must be at least 6 characters long!');
                document.getElementById('password').focus();
                return false;
            }
        });

        // Auto-focus on first field
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('username').focus();

            // Initialize map after a short delay to ensure Leaflet is loaded
            setTimeout(function() {
                if (typeof L !== 'undefined') {
                    initializeMap();
                } else {
                    console.error('Leaflet not loaded after DOM ready');
                    // Retry after another delay
                    setTimeout(function() {
                        if (typeof L !== 'undefined') {
                            initializeMap();
                        } else {
                            console.error('Leaflet failed to load completely');
                            alert('지도를 로드할 수 없습니다. 페이지를 새로고침해주세요.');
                        }
                    }, 1000);
                }
            }, 500);
        });

        // Map initialization and functionality
        let map = null;
        let marker = null;

        function initializeMap() {
            console.log('Initializing map...'); // 디버깅 로그

            try {
                // Default location (Seoul, South Korea)
                const defaultLocation = [37.5665, 126.9780];

                // Check if Leaflet is loaded
                if (typeof L === 'undefined') {
                    console.error('Leaflet not loaded!');
                    return;
                }

                // Check if map container exists
                const mapElement = document.getElementById('map');
                if (!mapElement) {
                    console.error('Map container not found!');
                    return;
                }

                console.log('Creating map...');
                // Initialize map
                map = L.map('map').setView(defaultLocation, 15);

                // Add OpenStreetMap tiles
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
                    maxZoom: 18
                }).addTo(map);

                console.log('Adding marker...');
                // Add marker at center
                marker = L.marker(defaultLocation, {
                    draggable: false,
                    title: '선택된 위치'
                }).addTo(map);

                console.log('Setting up event listeners...');
                // Update coordinates when map center changes
                map.on('move', function() {
                    const center = map.getCenter();
                    updateCoordinates(center.lat, center.lng);
                    // 마커도 중앙으로 이동
                    marker.setLatLng(center);
                });

                // Set initial coordinates
                updateCoordinates(defaultLocation[0], defaultLocation[1]);

                console.log('Map initialized successfully!');
            } catch (error) {
                console.error('Error initializing map:', error);
            }
        }

        function updateCoordinates(lat, lng) {
            console.log('Updating coordinates:', lat, lng);
            const latField = document.getElementById('latitude');
            const lngField = document.getElementById('longitude');

            if (latField && lngField) {
                latField.value = lat.toFixed(6);
                lngField.value = lng.toFixed(6);
            }
        }

        function searchAddress() {
            const address = document.getElementById('addressSearch').value;
            if (!address) {
                alert('주소를 입력해주세요.');
                return;
            }

            // Use Nominatim API for geocoding (OpenStreetMap)
            fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}&limit=1&countrycodes=kr`)
                .then(response => response.json())
                .then(data => {
                    if (data && data.length > 0) {
                        const result = data[0];
                        const location = [parseFloat(result.lat), parseFloat(result.lon)];

                        // Move map to the found location
                        map.setView(location, 16);
                        marker.setLatLng(location);

                        // Update coordinates
                        updateCoordinates(location[0], location[1]);
                    } else {
                        alert('주소를 찾을 수 없습니다.');
                    }
                })
                .catch(error => {
                    console.error('Geocoding error:', error);
                    alert('주소 검색 중 오류가 발생했습니다.');
                });
        }

        // Event listener for address search button
        document.getElementById('searchAddressBtn').addEventListener('click', searchAddress);
    </script>
</body>
</html>
